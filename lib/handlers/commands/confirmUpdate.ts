/*
 * Copyright Â© 2018 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import {
    editModes,
    GitProject,
    guid,
    MappedParameter,
    MappedParameters,
    Parameter,
    Parameters,
} from "@atomist/automation-client";
import {
    CodeTransform,
    CodeTransformRegistration,
} from "@atomist/sdm";
import { SlackMessage } from "@atomist/slack-messages";
import * as goals from "../../../fingerprints/index";
import { footer } from "../../support/util";

@Parameters()
export class ConfirmUpdateParameters {

    @Parameter({ required: false, displayable: false })
    public msgId?: string;

    @MappedParameter(MappedParameters.GitHubOwner)
    public owner: string;

    @MappedParameter(MappedParameters.GitHubRepository)
    public repo: string;

    @MappedParameter(MappedParameters.GitHubRepositoryProvider)
    public providerId: string;

    @Parameter({ required: true })
    public name: string;

    @Parameter({ required: true })
    public version: string;
}

const confirmUpdate: CodeTransform<ConfirmUpdateParameters> = async (p, cli) => {
    // await cli.addressChannels(`make an edit to the project in ${(p as GitProject).baseDir} to go to version ${cli.parameters.version}`);
    goals.edit((p as GitProject).baseDir, cli.parameters.name, cli.parameters.version);
    const message: SlackMessage = {
        attachments: [
            {
                author_name: "Library Update",
                author_icon: `https://images.atomist.com/rug/check-circle.gif?gif=${guid()}`,
                text: `Updating version to \`${cli.parameters.name}:${cli.parameters.version}\` in <https://github.com/${
                    cli.parameters.owner}/${cli.parameters.repo}|${cli.parameters.owner}/${cli.parameters.repo}>`,
                mrkdwn_in: ["text"],
                color: "#45B254",
                fallback: "none",
                footer: footer(),
            },
        ],
    };
    await cli.addressChannels(message);
    return p;
};

export const ConfirmUpdate: CodeTransformRegistration<ConfirmUpdateParameters> = {
    name: "LibraryImpactConfirmUpdate",
    description: "choose to raise a PR on the current project for a library version update",
    paramsMaker: ConfirmUpdateParameters,
    transformPresentation: ci => {
        const pr = new editModes.PullRequest(
            `library-impact-confirm-update-${Date.now()}`,
            `Update library ${ci.parameters.name} to ${ci.parameters.version}`,
            "Nudge generated by Atomist");
        (pr as any).autoMerge = {
            mode: editModes.AutoMergeMode.SuccessfulCheck,
        };
        return pr;
    },
    transform: confirmUpdate,
};
